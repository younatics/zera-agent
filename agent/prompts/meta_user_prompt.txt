# PROMPT OPTIMIZATION TASK

## 1. TASK CONTEXT
Task Type: 
{task_type}

Task Description:
{task_description}

## 2. PERFORMANCE ANALYSIS
Review these cases carefully:
{random_cases}

- Check whether the prompts allow free-form reasoning without early formatting constraints.
- Check if formatting is enforced only at the final answer presentation.
- Identify if the prompts are unnecessarily verbose or over-constrained.
- Study the Expected Output cases to infer the necessary structural patterns.
- Extract generalizable rules for brevity, clarity, and minimal instruction sets.

## 3. PROMPT REVIEW
Recent Prompt History:
{recent_prompts}

Best Performing Prompt:
{formatted_best_prompt}

Current System Prompt:
{system_prompt}

Current User Prompt:
{user_prompt}

## 4. IMPROVEMENT TASK
- Your goal is to generate a new system prompt and user prompt that:
    - Encourage free, logical reasoning during the main solution phase
    - Consider and apply the required output structure only at the final improvement
    - Keep the prompt short, clear, and non-burdensome
- If evaluation scores stagnate, prioritize simplifying prompts and reinforcing the separation between reasoning and formatting.
- Instead of mimicking the expected output, extract its intent by applying our core evaluation criteria and use these insights to guide prompt improvement.

## 5. OUTPUT FORMAT
TASK_TYPE:
[Main task type] ([Sub-task type])

TASK_DESCRIPTION:
[Enhanced task description with clear output requirements]

SYSTEM_PROMPT:
[Optimized system prompt]

USER_PROMPT:
[Optimized user prompt]